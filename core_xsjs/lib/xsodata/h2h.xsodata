service {
	"cvPaymentOrder"						as "PaymentOrder"		key ("docExtId")		navigates (	"PaymentOrder_Files"			as "PaymentOrderFile", 
																												"PaymentOrder_Sign"				as "PaymentOrderSign"	from principal);
	"RaiffeisenBank.Request"				as "Request" 			key ("requestId")				navigates (	"Request_PayDoc"				as "RequestPayDoc"		from principal);	
	"RaiffeisenBank.PayDocRu"				as "PayDocRu"			key ("requestId", "docExtId")	navigates (	"PayDocRu_AccDoc"				as "PayDocRuAccDoc",
																												"PayDocRu_Payer"				as "PayDocRuPayer",
																												"PayDocRu_Payee"				as "PayDocRuPayee",
																												"PayDocRu_File"					as "PayDocRuFile",
																												"PayDocRu_Sign" 				as "PayDocRuSign"		from principal) 					
																						delete using "xsjs:dbf.xsjslib::deletPaymentOrder";				
	"RaiffeisenBank.AccDoc"					as "AccDoc"				key ("docExtId")	update using "xsjs:dbf.xsjslib::updateAccDoc";
	"RaiffeisenBank.Payer"					as "Payer"				key ("docExtId");
	"RaiffeisenBank.Payee"					as "Payee"				key ("docExtId");
	"RaiffeisenBank.Files"					as "Files"				key ("requestId")	create using "xsjs:dbf.xsjslib::fileUpload";
	"RaiffeisenBank.Sign"					as "Sign"				key ("docExtId", "SN")	create using "xsjs:dbf.xsjslib::createSing"
																						delete using "xsjs:dbf.xsjslib::deletSing";			
																			
	"cvStatement"							as "Statement"			key ("responseId")				navigates(	"Statement_ItemsCred" as "ItemsCred",
																												"Statement_ItemsDeb"  as "ItemsDeb" from principal) aggregates always;
	"RaiffeisenBank.StatementItemsCred"		as "StatementItemsCred"	key ("responseId", "extId");																
	"RaiffeisenBank.StatementItemsDeb"		as "StatementItemsDeb"	key ("responseId", "extId");
	"RaiffeisenBank.History"				as "History"			key ("docExtId");
	"RaiffeisenBank.Response"				as "Response"			key ("docExtId") create using "xsjs:dbf.xsjslib::response";
	
																										
	association "PaymentOrder_Files"	principal  "PaymentOrder"("requestId") 		multiplicity "1" dependent "Files"("requestId")						multiplicity "1";
	association "PaymentOrder_Sign"		principal  "PaymentOrder"("docExtId") 		multiplicity "1" dependent "Sign"("docExtId")						multiplicity "*";
	association "Request_PayDoc"		principal  "Request"("requestId")			multiplicity "1" dependent "PayDocRu"("requestId")					multiplicity "1";
	association "PayDocRu_AccDoc"		principal  "PayDocRu"("docExtId")			multiplicity "1" dependent "AccDoc"("docExtId")						multiplicity "*";
	association "PayDocRu_Payer"		principal  "PayDocRu"("docExtId")			multiplicity "1" dependent "Payer"("docExtId")						multiplicity "1";
	association "PayDocRu_Payee"		principal  "PayDocRu"("docExtId")			multiplicity "1" dependent "Payee"("docExtId")						multiplicity "1";
	association "PayDocRu_File"			principal  "PayDocRu"("requestId") 			multiplicity "1" dependent "Files"("requestId")						multiplicity "1";
	association "PayDocRu_Sign"			principal  "PayDocRu"("docExtId")			multiplicity "1" dependent "Sign"("docExtId")						multiplicity "*";
	association "Statement_ItemsCred"	principal  "Statement"("responseId")		multiplicity "1" dependent "StatementItemsCred"("responseId")		multiplicity "*";
	association "Statement_ItemsDeb"	principal  "Statement"("responseId")		multiplicity "1" dependent "StatementItemsDeb"("responseId")		multiplicity "*";
}
annotations {
   enable OData4SAP;
}